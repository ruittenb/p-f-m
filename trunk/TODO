
################################################################################
# issues

- from the manual of File::Spec:
  File::Spec->canonpath($path) does *not* collapse x/../y sections into y.
  This is by design. If /foo on your system is a symlink to /bar/baz, then
  /foo/../quux is actually /bar/quux, not /quux as a naive ../-removal would
  give you. If you want to do this kind of processing, you probably want Cwd's
  realpath() function to actually traverse the filesystem cleaning up paths
  like this.

- handlecopyrename: if "overwrite?" is answered with "no", then the
  cursor is repositioned anyway.

- MacOS filesystem is case-preserving, but not case-sensitive. How to handle that?
  - 'mv -i BSON bson' prompts whether to overwrite a file that it thinks exists. (OS does the same)
  - whether or not a 'mv -i BSON bson' was answered with 'y' or 'n', pfm stat()s both files
    and finds that they both exist.
  - test filesystem case-sensitivity? From the filesystem object?
    - prompt# diskutil info /
      File System Personality:  Journaled HFS+
      File System Personality:  Case-sensitive Journaled HFS+.

- (M)ore (S)how same dir: doesn't remove marks
  -> is this due to the fact that Directory::_clone() does not clone the files?
  -> handleswap() has different conditions for executing its blocks

- bug: a file can be (R)enamed to '=e'
- if =5 is requested but there is no swap state, what to do?
- in general, if an escape is invalid, what to do?

- cursor on /. (L)ink (R)elative /tmp/b/rootdir creates
  /tmp/b/rootdir -> ../../..
- test if all move/copy/rename/link(h,a,r) and (M)ore - fo(L)low are well with
  the new version of Util::basename().

- when an svn directory is entered (kr) and then left (kl) before the svn
  command has finished, there is a noticable delay in browsing; subsequently,
  svn reports "svn: write error: broken pipe".

- find out if chooser objects check the 'handled' member correctly in choose()
- find out if the browser::baseline() can miss the set_deferred_refresh that
  has been commented out.

- fix encodings with wide characters.
- fix filenames in russian addressed in LC_ALL=fr_FR.utf8; (try/catch)
  do we need a $file->{bytename} ?
- read/save config file in '<:encoding(locale)'
- check the luit(1) program

- TODO: multi_to_single():
  the presence of a =3 or =9 may be enough to resolve this.
  Maybe we really want to do an expand_39_escape() here.


- Every second time on (M)ore - (R)ead bookmarks:
Can't use string ("") as a subroutine ref while "strict refs" in use at /usr/local/share/perl/devel/lib/App/PFM/Abstract.pm line 196.

- BUG: when F5 discovers that the current directory is gone, it creates a '.' and '..' entry with nlink == 0. These can be deleted using (D), crashing pfm.

- BUG: when returning (M)(G) to an instantiated bookmark, the cursor is not positioned correctly.

- (M)ore - <F7>: swap to bookmark

- remove date/time warning in Config

- when install.sh is run as root (sudo), then test.sh will create directory ~/.pfm with ownership root:root

- svn status output:
$ svn st
M      .
!     C pfm1.95.5
      >   local delete, incoming delete upon merge
A  +    doc
A  +    doc/pfm.1
A  +    doc/pfm.ps
A  +    doc/pfm.html
A  +    doc/pfm.pdf

- registered multiple times: clone() registers it doubly
'_event_handlers' => HASH(0x9f99040)
'after_resize_window' => ARRAY(0x9f853e0)
0  CODE(0x9d922c0) -> &App::PFM::History::__ANON__[:152]
1  CODE(0x9718500) -> &App::PFM::Browser::__ANON__[:82]
2  CODE(0xa057d10) -> &App::PFM::Browser::__ANON__[:82]
3  CODE(0x9ff5c10) -> &App::PFM::Browser::__ANON__[:82]
4  CODE(0xa195a88) -> &App::PFM::Browser::__ANON__[:82]
5  CODE(0xa1aedb0) -> &App::PFM::Browser::__ANON__[:82]
6  CODE(0xa1f5aa8) -> &App::PFM::Browser::__ANON__[:82]
'after_set_color_mode' => ARRAY(0x9f85430)

################################################################################
# structural enhancements

- restructure chdir(), handleswap()/handlemoreshow()/handlemorego() etc.
- check function of $swapping flag behavior

- add an 'is_main' flag to directories so that they know if a job event may
  trigger a screen update

- stat all files in the background?

- add a (M)ore - s(U)do command (CPAN: use Sudo;)

- change Config->{_text} to slurp reading: my $code = do { local $/; <$in> };
- change Config::Update to /\A...\z/mso

- reading bookmarks (M)ore (R)ead (N)o (Y)es -> crash (maybe because of instantiated bookmark?)

- make our() variables member variables (Get Rid of Slimy applicaSion object)

- have File notify the directory through events

- handlefind_incremental needs reviewing if we want to eliminate ->browser-> calls.

- have objects (Directory) fire an event to indicate that the current position
  is to be saved ('save_cursor_position' -> position_at())
  'before_smudge_cursor_position' ?
- like CommandHandler's handlemorebookmark():
  $_pfm->state->{_position}  = $event->{currentfile}{name};
  $_pfm->state->{_baseindex} = $event->{lunchbox}{baseindex};
  => 'before_state_handling'?

- who determines which command was clicked in the menu?
  is that the CommandHandler::handlemousefooter* or Screen::Frame?

- implement 'after_create_entry'

- have a look at IPC::Run

- Browser: integrate the different choose() and browse() methods.
- get rid of Chooser class?

- autowritebookmarks: write after bookmarking?

################################################################################
# functional enhancements

- introduce SIGQUIT for interrupt multi?

- introduce 'scrolloffset' as in vim?

- maybe allow for file sizes to be displayed with thousands separator,
  e.g. 51_130_240.

- add escapes for bookmark targets?
  ={+a} ?
  =+a ?
  ={+a/1b-drop7/2rc1} ?

- commandline option to start in a bookmark? pfm -gA ?

- make the coreutils' hasacl work.

- accept mouse clicks on menu in (M)ore;
- in general, accept more mouse clicks 

- make si(Z)e a job in the background just like (V)ersion

- nice to have: implement an 'after_job_receive_no_data' event

- Filesystem - Filesys/POSIX/Mount.pm

################################################################################
# overlay filesystems


root@visnet:/mnt# mount -t aufs -o br:/mnt/upper:/mnt/lower none /mnt/overlay

root@visnet:/mnt# df
Filesystem           1K-blocks      Used Available Use% Mounted on
/dev/sda5            107890108  13536144  88873392  14% /
none                   1672432       300   1672132   1% /dev
none                   1676676       420   1676256   1% /dev/shm
none                   1676676       272   1676404   1% /var/run
none                   1676676         0   1676676   0% /var/lock
none                   1676676         0   1676676   0% /lib/init/rw
none                 107890108  13536144  88873392  14% /var/lib/ureadahead/debugfs
/dev/sda1             41286796  12420684  26768828  32% /home
none                 107890108  13536144  88873392  14% /mnt/overlay

root@visnet:/mnt# mount
...etc...
none on /mnt/overlay type aufs (rw,br:/mnt/upper:/mnt/lower)


root@visnet:/mnt# mount -t aufs -o br:/mnt/upper:/mnt/intermediate:/mnt/lower none /mnt/overlay
root@visnet:/mnt# mount 
...etc...
none on /mnt/overlay type aufs (rw,br:/mnt/upper:/mnt/intermediate:/mnt/lower)


################################################################################
# documentation enhancements

- manpages: use I<...> in =items

  DONE: Application Abstract Config Event File History Screen State Util
	JobHandler Job/CheckUpdates Job/Mercurial
	Job/Abstract Job/RCS Job/Bazaar Job/Cvs Job/Git Job/Subversion

  TODO: Browser CommandHandler Directory
	Browser/Chooser Browser/Files Browser/YourCommands Browser/Bookmarks
	OS OS/Abstract OS/Linux OS/Aix OS/Hpux OS/Sco OS/Solaris
	Screen/Frame Screen/Diskinfo Screen/Listing



